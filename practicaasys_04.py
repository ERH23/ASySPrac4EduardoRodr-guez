# -*- coding: utf-8 -*-
"""PracticaASyS_04

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1RNQHJsYG20oJbcAXnSfFjAFrHb1k1Ptj

1. Considere la función de tiempo discreto f [n] =
e−n/5 cos(πn/5)u[n]. La sección 3.11 utiliza
funciones anónimas en la descripción de señales DT.

  f = @(n) exp(-n/5).*cos(pi*n/5).*(n>=0)

  Si bien esta función anónima funciona correctamente
para una operación de reducción de resolución como
f[2n], no funciona correctamente durante un
operación de muestreo superior, como f[n/2]. Modificar
la función anónima f para que también
Se adapta correctamente a las operaciones de sobremuestreo.
Pruebe su código computando y trazando
f(n/2) sobre (−10 ≤ n ≤ 10).
"""

import matplotlib.pyplot as plt
import numpy as np

def f(n):
    return np.exp(-n/5) * np.cos(np.pi * n / 5) * (n >= 0)

n = np.arange(-10, 11)
n_half = np.arange(-10, 11, 0.5)

# Compute f(n/2)
f_half = f(n_half * 2)

# Plot
plt.stem(n_half, f_half)
plt.xlabel('n')
plt.ylabel('f[n/2]')
plt.title('Gráfica de problema 3.11-2')
plt.grid(True)
plt.show()